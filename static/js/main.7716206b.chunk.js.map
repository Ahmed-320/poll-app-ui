{"version":3,"sources":["actions/authUser.js","components/ErrorMsg.js","components/SignUp/SignUp.js","components/Login/Login.js","components/Poll/Poll.js","actions/polls.js","components/Paginator.js","components/Home/Home.js","actions/poll.js","components/Error404.js","components/VotePoll/VotePoll.js","components/Results/Results.js","components/NewPoll/NewPoll.js","actions/user.js","components/LeaderBoard/LeaderBoard.js","components/Profile/EditProfile/EditForm.js","components/Profile/ChangePassword/PasswordForm.js","components/Profile/DeleteUser/DeleteForm.js","components/Profile/PollCard/PollCard.js","components/Profile/Profile.js","components/Nav/Search/SearchForm.js","components/Nav/Nav.js","components/Footer.js","components/App.js","reducers/polls.js","reducers/user.js","reducers/root.js","reducers/poll.js","reducers/authUser.js","middleware/middleware.js","middleware/logger.js","index.js"],"names":["SET_AUTH_USER","UPDATE_USER","DELETE_USER","CREATE_USER","CHANGE_PASSWORD","setAuthUser","token","userId","name","email","imageUrl","errors","type","createUser","updateUser","message","handleChangePassword","formDate","dispatch","fetch","process","headers","Authorization","method","body","then","res","json","result","changePassword","catch","err","console","warn","handleDeleteUser","formData","deleteUser","ErrorMsg","className","this","props","error","errorMsg","Component","connect","SignUp","e","preventDefault","user","FormData","target","history","push","authUser","msg","id","onSubmit","setCreateUser","bind","placeholder","htmlFor","to","withRouter","Login","state","loginHandler","localStorage","setItem","expiryDate","Date","getTime","toISOString","LoginUser","moment","require","Poll","polls","map","poll","author","_id","alt","src","title","options","text","createdAt","format","pollDuration","nav","RECEIVE_POLLS","RECEIVE_AUTH_POLLS","SEARCH_POLLS","receivePolls","loading","handleReceivePolls","page","receiveAuthPolls","handleReceiveAuthPolls","receiveSearchResults","searchLoading","Paginator","getItem","log","pageRange","currentPage","onClick","getPage","icon","faChevronLeft","color","size","paginationArr","length","faChevronRight","Home","tabName","innerText","changeTab","height","width","authNav","location","search","match","unAuthNav","pagination","SAVE_ANSWER","CREATE_POLL","GET_POLL","UPDATE_VOTE","DELETE_VOTE","DELETE_POLL","handleGetPoll","poll_id","getPoll","saveAnswer","createPoll","success","firstPage","updateVote","handleDeleteVote","poll_Id","deletePoll","Error404","errorMessage","redirect","pathname","from","preLocation","VotePoll","answer","option","alert","append","votedAnswer","handleUpdateVote","handleSaveAnswer","undefined","txt","value","input","setState","defaultChecked","params","voters","filter","voter","voter_Id","Results","mostVotedOption","votes","totalVotes","optionsText","opCounter","optionsCount","i","opCountArr","vote","counter","setCounter","faCheckCircle","completed","bgColor","labelAlignment","borderRadius","ariaValuetext","diff","utc","NewPoll","numberOfOptions","date","countOptions","optionsArr","utcOffset","pop","saveNewPoll","onChange","setOptionsCounter","onBlur","min","HTML5_FMT","DATETIME_LOCAL","op","document","getElementsByClassName","GET_USER","GET_LEADER_BOARD","handleGetUser","results","userLoading","getUser","getLeagerBoard","leaderLoading","LeaderBoard","users","faTrophy","votedPolls","createdPolls","score","LeaderBoardUsers","EditForm","modal","nested","trigger","close","faTimesCircle","updateUserForm","defaultValue","PasswordForm","changePasswordForm","DeleteForm","PollCard","pollType","Profile","showFrom","logoutHandler","position","faCog","handleDeletePoll","user_id","SearchForm","faSearch","resultDiv","showResult","searchPolls","Nav","smNav","barsRotation","showPage","searchTerm","faBars","rotation","currentUrl","Footer","App","removeItem","setLoginSession","openSocket","on","data","action","remainingMilliseconds","setAutoLogout","milliseconds","setTimeout","exact","path","component","render","initialState","totalItems","perPage","combineReducers","unshift","Math","ceil","applyMiddleware","thunk","store","next","group","returnValue","getState","groupEnd","createStore","root","middleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7716206b.chunk.js","sourcesContent":["export const SET_AUTH_USER = 'SET_AUTH_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\n\r\nexport function setAuthUser({token, userId, name, email, imageUrl, errors}){\r\n    return {\r\n        type: SET_AUTH_USER,\r\n        token: token,\r\n        userId: userId,\r\n        email: email,\r\n        name: name,\r\n        imageUrl: imageUrl,\r\n        errors: errors\r\n    }\r\n}\r\n\r\nfunction createUser({userId, errors}){\r\n    return {\r\n        type: CREATE_USER,\r\n        userId: userId,\r\n        errors: errors\r\n    }\r\n}\r\n\r\nexport function handleCreateUser(user){\r\n    return (dispatch)=>{\r\n        dispatch(createUser(user))\r\n        return fetch(process.env.REACT_APP_API_URL+'auth/signup',{\r\n            method: 'PUT',\r\n            body: user\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(createUser(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in saving the answer', err);\r\n            })\r\n    }\r\n}\r\n\r\nexport function handleLogin(user){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'auth/login',{\r\n            method: 'POST',\r\n            body: user\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(setAuthUser(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in saving the answer', err);\r\n                dispatch(setAuthUser({}))\r\n            })\r\n    }\r\n}\r\n\r\nfunction updateUser({message, errors}){\r\n    return {\r\n        type: UPDATE_USER,\r\n        message: message,\r\n        errors: errors\r\n    }\r\n}\r\n\r\nexport function handleUpdateUser(formDate, token){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'auth/user/update',{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'POST',\r\n            body: formDate\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(updateUser(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in updating the user', err);\r\n                dispatch(updateUser({}))\r\n            })\r\n    }\r\n}\r\n\r\nfunction changePassword({message, errors}){\r\n    return {\r\n        type: CHANGE_PASSWORD,\r\n        message: message,\r\n        errors: errors\r\n    }\r\n}\r\n\r\nexport function handleChangePassword(formDate, token){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'auth/user/changePassword',{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'POST',\r\n            body: formDate\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(changePassword(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in updating the user', err);\r\n            })\r\n    }\r\n}\r\n\r\nfunction deleteUser({message, errors}){\r\n    return {\r\n        type: DELETE_USER,\r\n        message: message, \r\n        errors: errors\r\n    }\r\n}\r\n\r\nexport function handleDeleteUser(formData, token){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'auth/user/delete',{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'DELETE',\r\n            body: formData\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(deleteUser(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in deleting user', err);\r\n            })\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ErrorMsg extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className={`mt-3 mb-3 text-center ${this.props.error ? '':'hidden'}`}>\r\n                <h1 className=\"inline-block h-10 text-red-400 border-2 border-red-400 rounded-lg w-60\">\r\n                    {this.props.errorMsg}\r\n                </h1>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(ErrorMsg);","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleCreateUser } from \"../../actions/authUser\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport ErrorMsg from \"../ErrorMsg\";\r\nimport './SignUp.css';\r\n\r\nclass SignUp extends Component {\r\n\r\n    setCreateUser(e){\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        this.props.dispatch(handleCreateUser(formData))\r\n            .then(res =>{\r\n                this.props.history.push('/login');\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <ErrorMsg error={this.props.authUser.errors} errorMsg={this.props.authUser.errors ? this.props.authUser.errors.msg: ''}/>\r\n            <div className=\"signupContainer\">\r\n                <div className=\"grid w-full gap-8 justify-items-center\">\r\n                    <section className=\"w-full text-center bg-gray-100\">\r\n                        <h1 className=\"font-bold\">Welcome</h1>\r\n                        <h2>Please sign up to vote for polls or to create your own poll</h2>\r\n                    </section>\r\n                    <h1><b>Sign Up</b></h1>\r\n                    <form method=\"post\" id=\"form\" className=\"grid grid-flow-row gap-5\" onSubmit={this.setCreateUser.bind(this)}>\r\n                        <input className='signUpInput' name=\"name\" type=\"text\" placeholder=\"Enter your name\"/>\r\n                        <input className='signUpInput' name=\"email\" type=\"email\" placeholder=\"Enter a valid email adress\"/>\r\n                        <label htmlFor=\"imageUrl\" className='font-bold text-gray-700'>Select an image</label>\r\n                        <input className='signUpImgInput' name=\"imageUrl\" id=\"imageUrl\" type=\"file\"/>\r\n                        <input className='signUpInput' name=\"password\" type=\"password\" placeholder=\"Enter your password\"/>\r\n                        <input className='signUpInput' name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm your password\"/>\r\n                        <button className=\"mb-4 font-bold text-white bg-blue-500 rounded-lg\" type=\"submit\">Signup</button>\r\n                        <p className='mb-4'>Already have an account ? <Link to='/login' className=\"h-8 text-center transition rounded-sm hover:text-blue-500\">Login</Link></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return { \r\n        authUser: authUser\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(SignUp));","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleLogin } from '../../actions/authUser';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport ErrorMsg from \"../ErrorMsg\";\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        authUser: this.props.authUser\r\n    }\r\n    LoginUser(e){\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        this.props.dispatch(handleLogin(formData));\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.props.authUser.token){\r\n            this.loginHandler();\r\n            if(!this.props.authUser.errors){\r\n                this.props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n    loginHandler(){\r\n        localStorage.setItem('token', this.props.authUser.token);\r\n        localStorage.setItem('userId', this.props.authUser.userId);\r\n        localStorage.setItem('name', this.props.authUser.name);\r\n        localStorage.setItem('email', this.props.authUser.email);\r\n        localStorage.setItem('imageUrl', this.props.authUser.imageUrl);\r\n        const remainingMilliseconds = 60 * 60 * 1000;\r\n        const expiryDate = new Date(\r\n            new Date().getTime() + remainingMilliseconds\r\n        );\r\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\r\n      }\r\n    render(){\r\n        return (\r\n            <div className='loginContainer'>\r\n                <ErrorMsg error={this.props.authUser.errors} errorMsg={this.props.authUser.errors ? this.props.authUser.errors.msg: ''}/>\r\n                <div className=\"grid w-full gap-8 justify-items-center\">\r\n                    <section className=\"w-full text-center bg-gray-200\">\r\n                        <h1 className=\"font-bold\">Welcome</h1>\r\n                        <h2>Please login to continue</h2>\r\n                    </section>\r\n                    <h1><b>Login</b></h1>\r\n                    <form method=\"post\" id=\"form\" className=\"grid grid-flow-row gap-5\" onSubmit={this.LoginUser.bind(this)}>\r\n                        <input className='loginInput' name=\"email\" type=\"email\" placeholder=\"Enter a valid email adress\"/>\r\n                        <input className='loginInput' name=\"password\" type=\"password\" placeholder=\"Enter your password\"/>\r\n                        <button className=\"mb-4 font-bold text-white bg-blue-500 rounded-lg\" type=\"submit\">Login</button>\r\n                    </form>\r\n                    <p className='mb-4'>Don't have an account ? <Link to='/signup' className=\"h-8 text-center transition rounded-sm hover:text-blue-500\">Sign Up</Link></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return { \r\n        authUser: authUser\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Login));","import { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport './Poll.css';\r\nconst moment = require('moment');\r\n\r\nclass Poll extends Component{\r\n    render(){\r\n        return (\r\n            <ul className=\"grid gap-4 mt-10 mb-6 justify-items-center\">\r\n            {this.props.polls ?\r\n                this.props.polls.map((poll)=>{\r\n                    return (\r\n                        <li key={poll._id} className=\"w-10/12 border-2 rounded-lg\">\r\n                            <section className=\"authorInfo\">\r\n                                <Link to={`/profile/${poll.author._id}`} className=\"authorName\">{poll.author.name} </Link>\r\n                                <p>&nbsp; asks:</p>\r\n                            </section>\r\n                            <section className='grid grid-cols-3 mt-4 mb-4 justify-items-center'>\r\n                                <img className=\"authorImg\" alt={poll.author.name} \r\n                                    src={process.env.REACT_APP_API_URL+`${poll.author.imageUrl}`} \r\n                                />\r\n                                <div className='pollContent'>    \r\n                                    <p className='text-lg font-bold text-center text-gray-700'>{poll.title}</p>\r\n                                    <p>{poll.options.text[0]}</p>\r\n                                    <p className='text-gray-800'>or...</p>\r\n                                    <p className='text-gray-800'>From: {moment(poll.createdAt).format(\"DD-MM-YYYY hh:mm\")}</p>\r\n                                    <p className='text-gray-800'>Till: {moment(poll.pollDuration).format(\"DD-MM-YYYY hh:mm\")}</p>\r\n                                    <div className='grid w-full text-center justify-items-stretch'>\r\n                                        {this.props.authUser.userId ? (\r\n                                        <Fragment>\r\n                                            {this.props.nav === 'unAns' ? (\r\n                                                <Link to={`/polls/poll/${poll._id}`} className=\"pollBtn\">\r\n                                                    Vote Poll\r\n                                                </Link>\r\n                                            ) : this.props.nav === 'Ans' ? (\r\n                                                <Link to={`/polls/poll/${poll._id}`} className=\"pollBtn\">\r\n                                                    Update Vote\r\n                                                </Link>\r\n                                            ):''}\r\n                                            <Link to={`/polls/pollResult/${poll._id}`} className=\"pollBtn\">\r\n                                                Result\r\n                                            </Link>\r\n                                        </Fragment>\r\n                                        ): (\r\n                                            <Link to={`/polls/pollResult/${poll._id}`} className=\"pollBtn\">\r\n                                                Result\r\n                                            </Link>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </li>\r\n                    )\r\n                }) : (<h3>There are No polls here...</h3>)}\r\n            </ul> \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return {\r\n        authUser: authUser,\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Poll));","export const RECEIVE_POLLS = 'RECEIVE_POLLS';\r\nexport const RECEIVE_AUTH_POLLS = 'RECEIVE_AUTH_POLLS';\r\nexport const SEARCH_POLLS = 'SEARCH_POLLS';\r\n\r\n\r\nfunction receivePolls(polls={}, loading=false){\r\n    return {\r\n        type: RECEIVE_POLLS,\r\n        loading,\r\n        ...polls\r\n    }\r\n}\r\n\r\nexport function handleReceivePolls(nav, page){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/'+nav+'?page='+page,{\r\n            method: 'GET',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(receivePolls(result, true));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n                dispatch(receivePolls());\r\n            })\r\n    }\r\n}\r\n\r\nfunction receiveAuthPolls(polls={}, loading=false){\r\n    return {\r\n        type: RECEIVE_AUTH_POLLS,\r\n        loading,\r\n        ...polls\r\n    }\r\n}\r\n\r\nexport function handleReceiveAuthPolls(nav, page, token){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/authPolls/'+nav+'?page='+page,{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'GET',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(receiveAuthPolls(result, true));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n                dispatch(receiveAuthPolls());\r\n            })\r\n    }\r\n}\r\n\r\nfunction receiveSearchResults(polls={}, searchLoading=false){\r\n    return {\r\n        type: SEARCH_POLLS,\r\n        searchLoading,\r\n        polls\r\n    }\r\n}\r\n\r\nexport function handleSearchResults(searchTerm){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/search/' + searchTerm,{\r\n            method: 'GET',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(receiveSearchResults(result, true));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n                dispatch(receiveSearchResults());\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { handleReceivePolls, handleReceiveAuthPolls } from '../actions/polls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Paginator extends Component{\r\n    state = {\r\n        token: localStorage.getItem('token'),\r\n    }\r\n\r\n    getPage(page){\r\n        if(this.state.token){\r\n            if(this.props.nav !== 'out-date'){\r\n                this.props.dispatch(handleReceiveAuthPolls(this.props.nav, page, this.state.token));\r\n            }else{\r\n                console.log(this.props.nav)\r\n                this.props.dispatch(handleReceivePolls(this.props.nav, page));\r\n            }\r\n        }else if(!this.state.token){\r\n            this.props.dispatch(handleReceivePolls(this.props.nav, page));\r\n        }\r\n    }\r\n    render(){\r\n        if(this.props.pageRange > 1){\r\n            return (\r\n                <div className='flex justify-center gap-5 mb-6'>\r\n                    {+this.props.currentPage > 1 ? (\r\n                        <Link to={this.props.nav ? `/?nav=${this.props.nav}&page=${+this.props.currentPage-1}`: `/?page=${+this.props.currentPage-1}`}\r\n                            onClick={this.getPage.bind(this, +this.props.currentPage-1)}\r\n                            className='mt-1'\r\n                        >\r\n                            <FontAwesomeIcon \r\n                                icon={faChevronLeft} \r\n                                color=\"rgba(75, 85, 99)\" \r\n                                size='1x' \r\n                            />\r\n                        </Link>\r\n                    ):''}\r\n                            <Link to={this.props.nav ? `/?nav=${this.props.nav}&page=${this.props.currentPage}`:`/?page=${this.props.currentPage}`}\r\n                                    onClick={this.getPage.bind(this, this.props.currentPage)}\r\n                                    className='text-lg font-bold text-gray-600'\r\n                                >\r\n                                    {this.props.currentPage}\r\n                            </Link>\r\n                            <p className='text-lg font-bold text-gray-600'>/</p>\r\n                            <Link to={this.props.nav ? `/?nav=${this.props.nav}&page=${this.props.paginationArr.length}`:`/?page=${this.props.paginationArr.length}`}\r\n                                    onClick={this.getPage.bind(this, this.props.paginationArr.length)}\r\n                                    className='text-lg font-bold text-gray-600'\r\n                                >\r\n                                    {this.props.paginationArr.length}\r\n                            </Link>\r\n                    {+this.props.currentPage < this.props.pageRange ? (\r\n                        <Link to={this.props.nav ? `/?nav=${this.props.nav}&page=${+this.props.currentPage+1}`: `/?page=${+this.props.currentPage+1}`}\r\n                            onClick={this.getPage.bind(this, +this.props.currentPage+1)}\r\n                            className='mt-1'\r\n                        >\r\n                            <FontAwesomeIcon \r\n                                icon={faChevronRight} \r\n                                color=\"rgba(75, 85, 99)\" \r\n                                size='1x' \r\n                            />\r\n                        </Link>\r\n                    ):''}\r\n                </div>\r\n            )\r\n        }else{\r\n            return '';\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return {\r\n      authUser: authUser,\r\n    }\r\n  }\r\n\r\nexport default withRouter(connect(mapStateToProps)(Paginator));\r\n","import { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Poll from \"../Poll/Poll\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { handleReceivePolls, handleReceiveAuthPolls } from '../../actions/polls';\r\nimport Paginator from \"../Paginator\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './Home.css';\r\n\r\nclass Home extends Component{\r\n    state = {\r\n        token: localStorage.getItem('token'),\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.state.token){\r\n            this.props.dispatch(\r\n                handleReceiveAuthPolls(\r\n                    this.props.nav,\r\n                    this.props.currentPage, \r\n                    this.state.token\r\n                    ));\r\n            if(this.props.nav === 'out-date'){\r\n                this.props.dispatch(\r\n                    handleReceivePolls(\r\n                        this.props.nav, \r\n                        this.props.currentPage\r\n                    ));\r\n            }\r\n        }else if (!this.state.token){\r\n            this.props.dispatch(\r\n                handleReceivePolls(\r\n                    this.props.nav, \r\n                    this.props.currentPage\r\n                ));\r\n        }\r\n    }\r\n\r\n    changeTab(e){\r\n        const tabName = e.target.innerText;\r\n        let nav;\r\n        if(tabName === 'Answered'){\r\n            nav = 'Ans';\r\n        }else if(tabName === 'Un Answered'){\r\n            nav = 'unAns';\r\n        }else if(tabName === 'Outdated Polls'){\r\n            nav = 'out-date';\r\n        }\r\n        else if(tabName === 'All Polls'){\r\n            nav = 'all';\r\n        }\r\n        if(this.state.token){\r\n            if(nav !== 'out-date'){\r\n                this.props.dispatch(handleReceiveAuthPolls(nav, 1, this.state.token));\r\n            }else{\r\n                this.props.dispatch(handleReceivePolls(nav, 1));\r\n            }\r\n        }else if(!this.state.token){\r\n            this.props.dispatch(handleReceivePolls(nav, 1));\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"homeContainer\">\r\n                <nav className=\"flex flex-row place-content-center rounded-t-md\">\r\n                    {this.props.authUser.userId ? (\r\n                        <Fragment>\r\n                            <Link \r\n                            to={`/?nav=unAns`}  \r\n                            className={`pollsNav ${this.props.nav === ('unAns'||'')?('rounded-t-md'):'choosenNav'}`} \r\n                            onClick={this.changeTab.bind(this)}> \r\n                                <p className=\"pollsNavText\">Un Voted Polls</p>\r\n                            </Link>\r\n                            <Link \r\n                                to={`/?nav=Ans`} \r\n                                className={`pollsNav ${this.props.nav === 'Ans'?('rounded-t-md'):'choosenNav'}`} \r\n                                onClick={this.changeTab.bind(this)}>\r\n                                    <p className=\"pollsNavText\">Voted Polls</p>\r\n                            </Link>\r\n                        </Fragment>\r\n                    ):(\r\n                        <Link \r\n                            to={`/?nav=all`} \r\n                            className={`pollsNav bg-white ${this.props.nav === 'all'?('rounded-t-md'):'choosenNav'}`} \r\n                            onClick={this.changeTab.bind(this)}>\r\n                                <p className=\"pollsNavText\">All Polls</p>\r\n                        </Link>\r\n                    )}\r\n                    <Link \r\n                        to={`/?nav=out-date`}  \r\n                        className={`pollsNav ${this.props.nav === 'out-date'?('rounded-t-md'):'choosenNav'}`} \r\n                        onClick={this.changeTab.bind(this)}> \r\n                            <p className=\"pollsNavText\">Outdated Polls</p>\r\n                    </Link>\r\n                </nav>\r\n                {!this.props.loading ? (\r\n                    <div className='flex justify-center mt-24'>\r\n                        <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n                    </div>\r\n                    ) : (\r\n                    <div className=\"flex flex-col justify-center mt-3 \">\r\n                        <Poll polls={this.props.polls} nav={this.props.nav}/>\r\n                        <Paginator \r\n                            pageRange={this.props.pageRange} \r\n                            paginationArr={this.props.paginationArr} \r\n                            nav={this.props.nav}\r\n                            currentPage={this.props.currentPage}\r\n                        />\r\n                    </div> ) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser, polls }, props){\r\n    const token = localStorage.getItem('token');\r\n    const authNav = props.location.search.match(/(unAns|Ans|out-date)/g);\r\n    const unAuthNav = props.location.search.match(/(all|out-date)/g);\r\n    const nav = (token) ? (authNav?(authNav[0]):('unAns')) : (unAuthNav?(unAuthNav[0]):('all'));\r\n    const currentPage = props.location.search.match(/(\\d)/g) ? props.location.search.match(/(\\d)/g)[0]:1; \r\n    return {\r\n        authUser: authUser,\r\n        loading : polls.loading,\r\n        polls: polls.polls,\r\n        nav: nav,\r\n        currentPage: currentPage,\r\n        pageRange: polls.pagination ? polls.pagination.pageRange:'',\r\n        paginationArr: polls.pagination ? polls.pagination.paginationArr:'',\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Home));","export const SAVE_ANSWER = 'SAVE_ANSWER';\r\nexport const CREATE_POLL = 'CREATE_POLL';\r\nexport const GET_POLL = 'GET_POLL';\r\nexport const UPDATE_VOTE = 'UPDATE_VOTE';\r\nexport const DELETE_VOTE = 'DELETE_VOTE';\r\nexport const DELETE_POLL = 'DELETE_POLL';\r\n\r\nfunction getPoll(poll={}, loading=false){\r\n    return {\r\n        type: GET_POLL,\r\n        loading,\r\n        poll\r\n    }\r\n}\r\n\r\nexport function handleGetPoll(poll_id, token){\r\n    return (dispatch) =>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/poll/'+ poll_id,{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'GET',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(getPoll(result, true));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n            })\r\n    }\r\n}\r\n\r\nfunction saveAnswer(poll){\r\n    return {\r\n        type: SAVE_ANSWER,\r\n        poll\r\n    }\r\n}\r\n\r\nexport function handleSaveAnswer(poll_Id, option, token){\r\n    return (dispatch) =>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/addVote/'+ poll_Id,{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'PUT',\r\n            body: option\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(saveAnswer(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n                dispatch(saveAnswer());\r\n            })\r\n    }\r\n}\r\n\r\nexport function createPoll( poll, success=false, firstPage=false){\r\n    return {\r\n        type: CREATE_POLL,\r\n        success,\r\n        firstPage,\r\n        ...poll\r\n    }\r\n}\r\n\r\nexport function handleCreatePoll(poll, token){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/addPoll',{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'PUT',\r\n            body: poll\r\n            })\r\n            .then(result =>{\r\n                return result.json()\r\n            })\r\n            .then(res =>{\r\n                if(res.errors){\r\n                    dispatch(createPoll(res, false))\r\n                }\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in saving the answer', err);\r\n            })\r\n    }\r\n}\r\n\r\nfunction updateVote(poll){\r\n    return {\r\n        type: UPDATE_VOTE,\r\n        poll\r\n    }\r\n}\r\n\r\nexport function handleUpdateVote(poll_Id, option, token){\r\n    return (dispatch) =>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/poll/update/'+ poll_Id,{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'PUT',\r\n            body: option\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(updateVote(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n                dispatch(updateVote());\r\n            })\r\n    }\r\n}\r\n\r\nfunction deleteVote(poll){\r\n    return {\r\n        type: DELETE_VOTE,\r\n        ...poll\r\n    }\r\n}\r\n\r\nexport function handleDeleteVote(poll_Id, token){\r\n    return (dispatch) =>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/poll/delete/'+ poll_Id,{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'DELETE',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(deleteVote(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n            })\r\n    }\r\n}\r\n\r\nfunction deletePoll(result){\r\n    return {\r\n        type: DELETE_POLL,\r\n        ...result\r\n    }\r\n}\r\n\r\nexport function handleDeletePoll(poll_Id, token){\r\n    return (dispatch) =>{\r\n        return fetch(process.env.REACT_APP_API_URL+'polls/poll/deletePoll/'+ poll_Id,{\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            method: 'DELETE',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((result)=>{\r\n                dispatch(deletePoll(result));\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in receiving polls', err);\r\n                dispatch(deletePoll());\r\n            })\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Error404 extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"mt-20 mb-10 text-center\">  \r\n                <h1 className=\"inline-block h-20 text-red-400 border-2 border-red-400 rounded-lg w-60\">Error 404 <br />{this.props.errorMessage ? this.props.errorMessage : 'Page Not Found!'}</h1>\r\n                <br />\r\n                {this.props.redirect ? (\r\n                    <Link to={{pathname: '/login', state:{from: this.props.preLocation}}}>\r\n                        <p className=\"inline-block w-40 mt-10 font-bold text-white bg-blue-400 rounded-lg\" >Login</p>\r\n                    </Link>\r\n                ) : ('')}\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Error404);","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleGetPoll } from '../../actions/poll';\r\nimport { handleSaveAnswer, handleUpdateVote } from \"../../actions/poll\";\r\nimport Error404 from \"../Error404\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './VotePoll.css';\r\n\r\nclass VotePoll extends Component{\r\n\r\n    state = {\r\n        answer: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        const token = localStorage.getItem('token');\r\n        this.props.dispatch(handleGetPoll(this.props.poll_id, token));\r\n    }\r\n    \r\n    saveAnswer(e){\r\n        e.preventDefault();\r\n        const option = this.state.answer;\r\n        console.log(option)\r\n        if(!option){\r\n            return alert('You must choose a value');\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('option', option)\r\n        const token = localStorage.getItem('token');\r\n        if (this.props.votedAnswer.length){\r\n            this.props.dispatch(handleUpdateVote(this.props.poll_id, formData, token))\r\n                       .then(res =>{\r\n                           if(!this.props.errors){\r\n                            this.props.history.push('/')\r\n                           }\r\n                       })\r\n        }else{\r\n            this.props.dispatch(handleSaveAnswer(this.props.poll_id, formData, token))\r\n                        .then(res =>{\r\n                            if(!this.props.errors){\r\n                                this.props.history.push('/')\r\n                               }\r\n                        })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div> \r\n                {this.props.authUser.token ? (\r\n                     this.props.loading ? (\r\n                        <div className=\"grid gap-5 mt-10 mb-6 justify-items-center\">\r\n                            {this.props.poll !== undefined && !this.props.errors ? (\r\n                            <div className=\"votePollContainer\">\r\n                                <section className=\"inline-flex w-full h-8 pl-4 bg-gray-200 rounded-t-md\">\r\n                                    <Link to={`/profile/${this.props.poll.author._id}`}\r\n                                          className=\"font-bold text-gray-700 transition hover:text-yellow-50\">\r\n                                         {this.props.poll.author.name} \r\n                                    </Link>\r\n                                    <p>&nbsp; asks:</p>\r\n                                </section>\r\n                                <section className='grid grid-cols-3 mt-4 mb-4 justify-items-center'>\r\n                                    <img className=\"authorImage\" alt={this.props.poll.author.name} src={process.env.REACT_APP_API_URL+`${this.props.poll.author.imageUrl}`} />\r\n                                    <div className='pollInfoDiv'>\r\n                                        <p className='font-bold text-center'>{this.props.poll.title}</p>\r\n                                        <form className='grid w-full grid-flow-row gap-4 justify-items-center' onSubmit={this.saveAnswer.bind(this)}>\r\n                                            {this.props.poll.options.text.map(txt =>{\r\n                                                return (\r\n                                                    <div className={`optionText ${this.state.answer === txt ? 'border-blue-600 text-blue-600':'border-gray-600 text-gray-600'}`} key={txt}>\r\n                                                        <input \r\n                                                            type=\"radio\" \r\n                                                            name=\"option\" \r\n                                                            value={txt}\r\n                                                            onClick={input=>this.setState({answer: input.target.value})}\r\n                                                            defaultChecked={this.props.votedAnswer.length ? this.props.votedAnswer[0].option === txt :false}\r\n                                                        />\r\n                                                        <label>{txt}</label><br/>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                            <button className=\"submitBtn\" type='submit'>\r\n                                                    {this.props.votedAnswer.length ? 'Update':'Submit'}                                     \r\n                                            </button>\r\n                                        </form>\r\n                                    </div>\r\n                                </section>\r\n                            </div> ) : (\r\n                                <Error404 errorMessage={'Poll Not Found'} />\r\n                            ) }\r\n                        </div> ) : (\r\n                            <div className='flex justify-center mt-24'>\r\n                                <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n                            </div>\r\n                        )) : ( <Error404 errorMessage={'Please signin to see this page'} redirect={'/'} preLocation={this.props.history.location.pathname}/>)\r\n                    }\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser, poll}, props){\r\n    const { poll_id } = props.match.params;\r\n    return {\r\n        poll_id: poll_id,\r\n        authUser: authUser,\r\n        loading: poll.loading,\r\n        poll: poll.poll,\r\n        votedAnswer: poll.loading && poll.poll ? poll.poll.options.voters.filter(voter => voter.voter_Id === authUser.userId):null,\r\n        errors: poll.errors\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(VotePoll));","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Error404 from \"../Error404\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { handleGetPoll } from '../../actions/poll';\r\nimport { handleDeleteVote } from '../../actions/poll';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './Results.css';\r\n\r\nconst moment = require('moment');\r\n\r\nclass Results extends Component{\r\n\r\n    componentDidMount(){\r\n        const token = localStorage.getItem('token');\r\n        this.props.dispatch(handleGetPoll(this.props.poll_id, token));\r\n    }\r\n    setCounter(){\r\n        const votes = this.props.poll.options.voters;\r\n        const totalVotes = +votes.length;\r\n        const optionsText = this.props.poll.options.text;\r\n        const opCounter = +optionsText.length;\r\n        let optionsCount = {};\r\n        let mostVotedOption;\r\n        for(let i=0; i<opCounter; i++){\r\n            if(totalVotes){\r\n                const opCountArr = votes.filter(vote =>{\r\n                    return vote.option === optionsText[i];\r\n                })\r\n                optionsCount[optionsText[i]] = +opCountArr.length;\r\n            } \r\n            if(optionsCount[optionsText[i-1]]){\r\n                if(optionsCount[optionsText[i]] > optionsCount[optionsText[i-1]]){\r\n                    mostVotedOption = optionsText[i];\r\n                }else if(optionsCount[optionsText[i]] < optionsCount[optionsText[i-1]]){\r\n                    mostVotedOption = optionsText[i-1];\r\n                }else{\r\n                    mostVotedOption = '';\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            totalVotes: totalVotes,\r\n            optionsCount: optionsCount,\r\n            mostVotedOption: mostVotedOption\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.props.poll === undefined || !this.props.loading){\r\n            return (\r\n                <div className='flex justify-center mt-24'>\r\n                    <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n                </div>\r\n            )\r\n        }\r\n        const counter = this.setCounter();\r\n        console.log(counter.mostVotedOption)\r\n        return (\r\n            <div className=\"resultsContainer\">\r\n                {this.props.loading && this.props.poll ? (\r\n                    <div className=\"grid grid-flow-row\">\r\n                        <h1 className=\"resultTitle\">Asked by: {this.props.poll.author.name}</h1>\r\n                        <section className=\"grid grid-cols-4 gap-6 border-l-2\"> \r\n                            <img className=\"w-full col-span-1 mt-2 ml-2 rounded-full\" alt={this.props.poll.author.name} src={process.env.REACT_APP_API_URL+`${this.props.poll.author.imageUrl}`} />\r\n                            <div className='grid col-span-3 border-l-2 border-gray-300'>\r\n                                <h1 className=\"m-2 text-xl font-bold text-gray-700\">Results:</h1>\r\n                                <p className='text-lg font-bold text-center text-gray-700'>{this.props.poll.title}</p>\r\n                                {this.props.poll.options.text.map(txt =>{\r\n                                    return (\r\n                                        <div className='optionResult' key={txt}>\r\n                                            {this.props.poll.options.voters.filter(voter => (voter.voter_Id === this.props.authUser.userId && voter.option === txt)).length ?(\r\n                                                <div className='flex justify-end'>\r\n                                                    <section className='choosenVote'>\r\n                                                        <p className='font-bold text-blue-700'>your vote</p>\r\n                                                        <FontAwesomeIcon \r\n                                                            icon={faCheckCircle} \r\n                                                            color=\"blue\" \r\n                                                            size='lg' \r\n                                                        />\r\n                                                    </section>\r\n                                                </div>\r\n                                                ):''}\r\n                                            <p className='font-bold text-gray-700'>{txt}</p>\r\n                                            <ProgressBar \r\n                                                completed={counter.optionsCount[txt] ? (counter.optionsCount[txt]/counter.totalVotes)*100:0} \r\n                                                bgColor={counter.mostVotedOption === txt ? 'rgba(37, 99, 235)':'rgba(55, 65, 81)'}\r\n                                                labelAlignment='left'\r\n                                                height='50px'\r\n                                                borderRadius='10px'\r\n                                                ariaValuetext={counter.optionsCount[txt] ? (counter.optionsCount[txt]/counter.totalVotes)*100:0}\r\n                                            />\r\n                                            <p className='font-bold text-center text-gray-500'>{counter.optionsCount[txt] ? counter.optionsCount[txt]:0} out of {counter.totalVotes} votes</p>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                {this.props.authUser.token && moment(this.props.poll.pollDuration).diff(moment().utc())>0 ? (\r\n                                        this.props.poll.options.voters.filter(voter =>{\r\n                                        return voter.voter_Id === this.props.authUser.userId\r\n                                    }).length ? (\r\n                                        <div className='flex justify-center'>\r\n                                            <Link to={`/polls/poll/${this.props.poll._id}`} className=\"w-full resultBtn\">\r\n                                                Update Vote\r\n                                            </Link>\r\n                                            <button  className=\"w-full resultBtn\"\r\n                                                onClick={()=> {this.props.dispatch(handleDeleteVote(this.props.poll._id, this.props.authUser.token)).then(res =>{this.props.history.push('/');});}}>\r\n                                                Delete Vote\r\n                                            </button>\r\n                                        </div>\r\n                                        \r\n                                    ):(\r\n                                        <Link to={`/polls/poll/${this.props.poll._id}`} className=\"resultBtn\">\r\n                                            Vote Poll\r\n                                        </Link>\r\n                                    )\r\n                                    \r\n                                ): ''}\r\n                            </div>\r\n                        </section>\r\n                    </div> ) : (\r\n                        <Error404 errorMessage={'This question is not found!'} />\r\n                ) }\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser, poll}, props){\r\n    const { poll_id } = props.match.params;\r\n    return {\r\n        poll_id: poll_id,\r\n        authUser: authUser,\r\n        loading: poll.loading,\r\n        poll: poll.poll\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Results));","import { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleCreatePoll } from \"../../actions/poll\";\r\nimport Error404 from \"../Error404\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport ErrorMsg from \"../ErrorMsg\";\r\nimport './NewPoll.css';\r\nconst moment = require('moment');\r\n\r\nclass NewPoll extends Component{\r\n\r\n    state = {\r\n        numberOfOptions: ['option 1', 'option 2'],\r\n        title: '',\r\n        date: '',\r\n        optionsCount:2,\r\n        optionsText: []\r\n    }\r\n    setOptionsCounter(e){\r\n        const countOptions = +e.target.value;\r\n        let optionsArr = [];\r\n        for(let i = 1; i<=countOptions; i++){\r\n            optionsArr.push(`option ${i}`)\r\n        }\r\n        this.setState({\r\n            numberOfOptions: optionsArr,\r\n            optionsCount: countOptions\r\n        })\r\n    }\r\n    \r\n    saveNewPoll(e){\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append('title', this.state.title);\r\n        formData.append('date', this.state.date);\r\n        formData.append('optionsCount', this.state.optionsCount);\r\n        formData.append('offset', moment().utcOffset());\r\n        formData.append('optionsText', this.state.optionsText);\r\n        while(this.state.optionsText.length){\r\n            this.state.optionsText.pop();\r\n        }\r\n        this.props.dispatch(handleCreatePoll(formData, this.props.authUser.token))\r\n                    .then(res => {\r\n                        if(!this.props.polls.errors){\r\n                            this.props.history.push('/');\r\n                        }\r\n                    })\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='newPollContainer'>  \r\n                <ErrorMsg error={this.props.polls.errors} errorMsg={this.props.polls.errors ? this.props.polls.errors.msg: ''}/>\r\n                {this.props.authUser.userId ? (\r\n                    <div className=\"grid grid-flow-row gap-4 justify-items-center\">\r\n                        <h2 className=\"newPollTitle\">Create New Question</h2>\r\n                        <form className=\"grid w-2/3 grid-flow-row gap-5\" onSubmit={this.saveNewPoll.bind(this)}>\r\n                            <div className='flex h-8 gap-8 rounded-lg flex-inline ring-2 ring-gray-300'> \r\n                                <p className='font-bold text-gray-700'>Number of poll options: </p>\r\n                                <select onChange={this.setOptionsCounter.bind(this)}>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </select>\r\n                            </div>\r\n                            <input \r\n                                name='title' \r\n                                type=\"text\" \r\n                                className='newPollInput'\r\n                                placeholder='Enter poll title' \r\n                                onBlur={input => this.setState({title: input.target.value})}\r\n                            />\r\n                            <label htmlFor=\"timer\" className='font-bold text-gray-700'>Set poll days:</label>\r\n                            <input \r\n                                name='timer' \r\n                                className='newPollInput'\r\n                                type=\"datetime-local\" \r\n                                min={moment().format(moment.HTML5_FMT.DATETIME_LOCAL)}\r\n                                onChange={input => this.setState({date: input.target.value})}\r\n                            />\r\n                            <hr/>\r\n                            {this.state.numberOfOptions.map((op) => {\r\n                                return (\r\n                                    <Fragment key={op}>\r\n                                    <input \r\n                                        name={op} \r\n                                        className='newPollInput'\r\n                                        placeholder={`Enter ${op} text here`}\r\n                                    />\r\n                                    <hr/>\r\n                                    </Fragment>\r\n                                    )\r\n                            })}\r\n                            <button \r\n                                className=\"h-8 mb-4 font-bold text-white bg-blue-500 rounded-lg\"\r\n                                type=\"submit\"\r\n                                onClick={()=>[...document.getElementsByClassName('option')].map(input => this.state.optionsText.push(input.value))}\r\n                                >\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div> ) : (\r\n                        <Error404 errorMessage={'Please signin to see this page'} redirect={'/'} preLocation={this.props.history.location.pathname}/>\r\n                    ) }\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser, polls}){\r\n    return {\r\n        authUser: authUser,\r\n        polls: polls\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(NewPoll));","export const GET_USER = 'GET_USER';\r\nexport const GET_LEADER_BOARD = 'GET_LEADER_BOARD';\r\n\r\nfunction getUser(results={}, userLoading=false){\r\n    return {\r\n        type: GET_USER,\r\n        userLoading,\r\n        results\r\n    }\r\n}\r\n\r\nexport function handleGetUser(userId){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'auth/user/'+userId,{\r\n            method: 'GET',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then(results=>{\r\n                dispatch(getUser(results,true))\r\n            })\r\n            .catch(err =>{\r\n                console.warn('Error in getting the user', err);\r\n            })\r\n    }\r\n}\r\n\r\nfunction getLeagerBoard(results={}, leaderLoading=false){\r\n    return {\r\n        type: GET_LEADER_BOARD,\r\n        leaderLoading,\r\n        results\r\n    }\r\n}\r\n\r\nexport function handleGetLeaderBoard(){\r\n    return (dispatch)=>{\r\n        return fetch(process.env.REACT_APP_API_URL+'auth/leader-board',{\r\n            method: 'GET',\r\n            })\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then(results=>{\r\n                dispatch(getLeagerBoard(results,true))\r\n            })\r\n            .catch(err =>{\r\n                dispatch(getLeagerBoard({},false))\r\n                console.warn('Error in getting the user', err);\r\n            })\r\n    }\r\n}\r\n\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { handleGetLeaderBoard } from '../../actions/user';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\r\nimport './LeaderBoard.css';\r\n\r\nclass LeaderBoard extends Component{\r\n    \r\n    componentDidMount(){\r\n        this.props.dispatch(handleGetLeaderBoard())\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='BoardContainer'>\r\n                <ul className=\"flex flex-col gap-4 m-4\">\r\n                    <h1 className='text-xl font-bold text-center text-gray-700'>Top Voters</h1>\r\n                    {this.props.loading ? (\r\n                    this.props.users.map(user => {\r\n                        return (\r\n                            <li key={user._id} className=\"grid grid-cols-4 border-2 border-gray-300 rounded-md\">\r\n                                <section className='flex flex-col col-span-1 gap-2 m-2'>\r\n                                    <FontAwesomeIcon \r\n                                        icon={faTrophy} \r\n                                        color={this.props.users[0] === user ? \"yellow\" : this.props.users[1] === user ? 'gray' : 'rgba(180, 83, 9)'} \r\n                                        size='lg' \r\n                                    />\r\n                                    <img className='rounded-full' alt={user.name} src={process.env.REACT_APP_API_URL+`${user.imageUrl}`} />\r\n                                </section>\r\n                                <section className='flex flex-col col-span-2 gap-4 p-2 m-2 border-l-2 border-gray-300'>\r\n                                    <Link to={`/profile/${user._id}`} className='font-bold text-gray-900 transition hover:text-gray-400'>\r\n                                        {user.name}\r\n                                    </Link>\r\n                                    <div className='flex flex-row justify-between font-bold text-gray-700'>\r\n                                        <p>Answered Polls</p>\r\n                                        <p>{user.votedPolls}</p>\r\n                                    </div>\r\n                                    <div className='flex flex-row justify-between font-bold text-gray-700'>\r\n                                        <p>Created Polls</p>\r\n                                        <p>{user.createdPolls}</p>\r\n                                    </div>\r\n                                </section>  \r\n                                <section className='col-span-1 p-2 m-2 text-center border-l-2 border-gray-300'>\r\n                                    <div className='flex flex-col items-stretch h-full gap-4 border-2 border-gray-300 rounded-md'>\r\n                                        <p className='self-center w-full font-bold text-gray-700 bg-gray-300 h-1/3 rounded-t-md'>Score</p>\r\n                                        <p className='self-center w-8 h-8 text-lg font-bold text-white bg-blue-500 rounded-full'>{user.score}</p>\r\n                                    </div>\r\n                                </section>\r\n                            </li>                      \r\n                        )\r\n                    })) : (\r\n                        <div className='flex justify-center mt-24'>\r\n                            <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n                        </div>\r\n                    ) }\r\n                </ul>  \r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser, user}){\r\n    \r\n    return {\r\n        authUser: authUser,\r\n        users: user.LeaderBoardUsers,\r\n        loading: user.leaderLoading\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(LeaderBoard));","import { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from \"react-redux\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport  ErrorMsg  from '../../ErrorMsg';\r\n\r\nclass EditForm extends Component{\r\n    render(){\r\n        return (\r\n            <Popup modal className='setItems' nested trigger={<button className='text-gray-800 border-b-2 border-gray-400 hover:text-gray-500'>Edit Profile</button>}>\r\n                {close => (\r\n                    <div className='grid grid-flow-row'>\r\n                        <button className=\"close justify-self-end\" onClick={close}>\r\n                            <FontAwesomeIcon \r\n                                icon={faTimesCircle} \r\n                                color=\"gray\" \r\n                                size='lg' \r\n                                className='cursor-pointer justify-self-end'\r\n                            />\r\n                        </button>\r\n                        <ErrorMsg error={this.props.authUser.errors} errorMsg={this.props.authUser.errors ? this.props.authUser.errors.msg: ''}/>\r\n                        <form method=\"post\" id=\"form\" className=\"grid grid-flow-row gap-5\" onSubmit={this.props.updateUserForm}>\r\n                            <p className='text-lg font-bold text-center text-gray-700'>Edit Profile</p>\r\n                            <input className='popupInput' name=\"name\" type=\"text\" placeholder=\"Enter your name\" defaultValue={this.props.authUser.name}/>\r\n                            <input className='popupInput' name=\"email\" type=\"email\" placeholder=\"Enter a valid email adress\" defaultValue={this.props.authUser.email}/>\r\n                            <label htmlFor=\"imageUrl\" className='font-bold text-gray-700'>Select an image</label>\r\n                            <input className='popupImageInput' name=\"imageUrl\" id=\"imageUrl\" type=\"file\" placeholder=\"image Url\"/>\r\n                            <button className=\"h-8 mb-4 font-bold text-white bg-blue-500 rounded-lg\" type=\"submit\">Update</button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return { \r\n        authUser: authUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditForm);","import { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from \"react-redux\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport  ErrorMsg  from '../../ErrorMsg';\r\n\r\nclass PasswordForm extends Component{\r\n    render(){\r\n        return (\r\n            <Popup modal className='setItems' nested trigger={<button className='text-gray-800 border-b-2 border-gray-400 hover:text-gray-500'>Change Password</button>}>\r\n                {close => (\r\n                    <div className='grid grid-flow-row'>\r\n                        <button className=\"close justify-self-end\" onClick={close}>\r\n                            <FontAwesomeIcon \r\n                                icon={faTimesCircle} \r\n                                color=\"gray\" \r\n                                size='lg' \r\n                                className='cursor-pointer justify-self-end'\r\n                            />\r\n                        </button>\r\n                        <ErrorMsg error={this.props.authUser.errors} errorMsg={this.props.authUser.errors ? this.props.authUser.errors.msg: ''}/>\r\n                        <form method=\"post\" id=\"form\" className=\"grid grid-flow-row gap-5\" onSubmit={this.props.changePasswordForm}>\r\n                            <p className='text-lg font-bold text-center text-gray-700'>Change Password</p>\r\n                            <input className=' popupInput' name=\"oldPassword\" type=\"password\" placeholder=\"Enter old password\"/>\r\n                            <input className=' popupInput' name=\"newPassword\" type=\"password\" placeholder=\"Enter new password\"/>\r\n                            <input className=' popupInput' name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm your password\"/>\r\n                            <button className=\"h-8 mb-4 font-bold text-white bg-blue-500 rounded-lg\" type=\"submit\">Update</button>\r\n                        </form>\r\n                    </div>\r\n                    )}\r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return { \r\n        authUser: authUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PasswordForm);","import { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from \"react-redux\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport  ErrorMsg  from '../../ErrorMsg';\r\n\r\nclass DeleteForm extends Component{\r\n    render(){\r\n        return (\r\n            <Popup modal className='setItems' nested trigger={<button className='text-gray-800 hover:text-gray-500'>Delete Account</button>}>\r\n                {close => (\r\n                        <div className='grid grid-flow-row'>\r\n                            <button className=\"close justify-self-end\" onClick={close}>\r\n                                <FontAwesomeIcon \r\n                                    icon={faTimesCircle} \r\n                                    color=\"gray\" \r\n                                    size='lg' \r\n                                    className='cursor-pointer justify-self-end'\r\n                                />\r\n                            </button>\r\n                            <ErrorMsg error={this.props.authUser.errors} errorMsg={this.props.authUser.errors ? this.props.authUser.errors.msg: ''}/>\r\n                            <form method=\"post\" id=\"form\" className=\"grid grid-flow-row gap-5\" onSubmit={this.props.deleteUser}>\r\n                                <p className='text-lg font-bold text-center text-gray-700'>Delete Account</p>\r\n                                <input className='popupInput' name=\"password\" type=\"password\" placeholder=\"Enter your password\"/>\r\n                                <button className=\"h-8 mb-4 font-bold text-white bg-blue-500 rounded-lg\" type=\"submit\">Delete</button>\r\n                            </form>\r\n                        </div>\r\n                        )}\r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return { \r\n        authUser: authUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DeleteForm);","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nclass PollCard extends Component{\r\n    render(){\r\n        return (\r\n            <div className='flex flex-col justify-start gap-2 pb-4 mt-4 border-b-2 border-gray-500'>\r\n                <p className='ml-2 mr-2 text-lg font-bold text-center text-gray-700 border-2 border-gray-500 rounded-md '>{this.props.pollType} Polls:    {this.props.polls.length}</p>\r\n                <div className='grid grid-cols-2'>\r\n                    {this.props.polls.map(poll =>{\r\n                        return (\r\n                            <div key={poll._id} className=\"grid grid-flow-row gap-2 m-2 text-center border-2 border-gray-300 rounded-lg\">\r\n                                <p className='font-bold text-gray-700'>\r\n                                    {poll.title}\r\n                                </p>\r\n                                <Link to={`/polls/pollResult/${poll._id}`} className=\"w-2/4 h-8 text-center text-white bg-blue-500 border-2 border-blue-200 rounded-full justify-self-center\">\r\n                                    Result\r\n                                </Link>\r\n                                {this.props.authUser.userId === poll.author._id && this.props.pollType === 'Created' ? (\r\n                                    <button  className=\"w-2/4 h-8 mb-1 text-center text-white bg-blue-500 border-2 border-blue-200 rounded-full justify-self-center\"\r\n                                        onClick={() =>{this.props.deletePoll(poll._id)}}>\r\n                                        Delete\r\n                                    </button>\r\n                                ): ''}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser}){\r\n    return { \r\n        authUser: authUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollCard);","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom';\r\nimport { handleGetUser } from '../../actions/user';\r\nimport { handleDeletePoll } from \"../../actions/poll\";\r\nimport { handleUpdateUser, handleDeleteUser, handleChangePassword } from '../../actions/authUser';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport './Profile.css';\r\nimport EditForm from \"./EditProfile/EditForm\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport Error404 from \"../Error404\";\r\nimport PasswordForm from \"./ChangePassword/PasswordForm\";\r\nimport DeleteForm from \"./DeleteUser/DeleteForm\";\r\nimport PollCard from \"./PollCard/PollCard\";\r\n\r\nclass Profile extends Component{\r\n    state ={\r\n        showFrom:'hidden',\r\n        token: localStorage.getItem('token'),\r\n    }\r\n    componentDidMount(){\r\n        this.props.dispatch(handleGetUser(this.props.userId))\r\n    }\r\n    updateUserForm(e){\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        this.props.dispatch(handleUpdateUser(formData, this.state.token))\r\n            .then(res =>{\r\n                if(!this.props.authUser.errors){\r\n                    this.props.logoutHandler();\r\n                    this.props.history.push('/login');\r\n                }\r\n            })\r\n        \r\n    }\r\n    changePasswordForm(e){\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        this.props.dispatch(handleChangePassword(formData, this.state.token))\r\n            .then(res =>{\r\n                if(!this.props.authUser.errors){\r\n                    this.props.logoutHandler();\r\n                    this.props.history.push('/login');\r\n                }\r\n            })\r\n    }\r\n    deleteUser(e){\r\n        e.preventDefault();\r\n        const formData = new FormData(e.target);\r\n        this.props.dispatch(handleDeleteUser(formData, this.state.token))\r\n            .then(res =>{\r\n                if(!this.props.authUser.errors){\r\n                    this.props.logoutHandler();\r\n                    this.props.history.push('/signup');\r\n                }\r\n            })\r\n    }\r\n    render(){\r\n        console.log(this.props)\r\n        return (\r\n            <div className='w-full m-auto mt-12 mb-10 align-middle border-2 border-gray-400 rounded-md md:w-2/3'>\r\n            {!this.props.errors ?  \r\n                this.props.loading ? (\r\n                    <div className=\"grid grid-flow-row\">\r\n                        <div className=\"grid h-20 grid-flow-col bg-gray-200 border-b-2 border-gray-500 rounded-t-md\">\r\n                            <section className='grid grid-flow-col'>\r\n                                <img className='w-16 mt-2 ml-2 border-2 border-blue-200 rounded-full' alt={this.props.user.name} src={process.env.REACT_APP_API_URL+`${this.props.user.imageUrl}`} />\r\n                                <p className='mt-5 text-lg font-bold text-gray-700'>{this.props.user.name}</p>\r\n                            </section>\r\n                            <section className='grid grid-flow-col'>\r\n                                <p className='mt-5 mb-5 text-lg font-bold text-gray-700 border-2 border-gray-500 rounded-md justify-self-end'>Score: {+this.props.user.votedPolls.length + +this.props.user.createdPolls.length}</p>\r\n                                {this.props.authUser.token ? (\r\n                                    <Popup position='bottom center' nested trigger={<button><FontAwesomeIcon className='self-center cursor-pointer'  icon={faCog} color=\"gray\" size='2x' /></button>}>\r\n                                        <div className='flex flex-col gap-1'>\r\n                                            <EditForm updateUserForm={this.updateUserForm.bind(this)}/>\r\n                                            <PasswordForm changePasswordForm={this.changePasswordForm.bind(this)}/>\r\n                                            <DeleteForm deleteUser={this.deleteUser.bind(this)}/>\r\n                                        </div>\r\n                                    </Popup>            \r\n                                ):''}\r\n                            </section>\r\n                        </div>\r\n                        <PollCard pollType='Voted' polls={this.props.votedPolls} />\r\n                        <PollCard pollType='Created' polls={this.props.createdPolls} deletePoll={(poll_Id)=> {this.props.dispatch(handleDeletePoll(poll_Id, this.props.authUser.token));}}/>\r\n                    </div>                        \r\n                ) : (\r\n                    <div className='flex justify-center mt-24'>\r\n                        <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n                    </div>\r\n                ) : (<Error404 errorMessage={'User is not found!'}/>)\r\n            }\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser, user}, props){\r\n    const { user_id } = props.match.params;    \r\n    return {\r\n        authUser: authUser,\r\n        loading: user.userLoading,\r\n        user: user.user,\r\n        createdPolls: user.createdPolls,\r\n        votedPolls: user.votedPolls,\r\n        userId: user_id,\r\n        errors: user.errors,\r\n        message: authUser\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Profile));","import { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport './SearchForm.css';\r\n\r\nclass SearchForm extends Component{\r\n    render(){\r\n        return (\r\n            <div className='searchIcon'>\r\n                <Popup \r\n                    modal \r\n                    className='setItems' \r\n                    nested trigger={<button>\r\n                            <FontAwesomeIcon \r\n                            icon={faSearch} \r\n                            color=\"gray\" \r\n                            size='1x'\r\n                            className='self-center' \r\n                        />\r\n                        </button>}\r\n                >\r\n                    {close => (\r\n                        <div className='grid grid-flow-row gap-2'>\r\n                            <button className=\"close justify-self-end\" onClick={close}>\r\n                                <FontAwesomeIcon \r\n                                    icon={faTimesCircle} \r\n                                    color=\"gray\" \r\n                                    size='lg' \r\n                                    className='cursor-pointer justify-self-end'\r\n                                />\r\n                            </button>\r\n                            <p className='text-lg font-bold text-center text-gray-700'>Search for poll</p>\r\n                            <input className='searchInput' placeholder='Enter poll title..' onChange={this.props.resultDiv}/>\r\n                            <div className={`resultDiv ${this.props.showResult}`}>\r\n                                <h1 className='col-span-2'>Search results: {this.props.searchPolls ? this.props.searchPolls.length: 0}</h1>\r\n                                {this.props.searchLoading && this.props.searchPolls ? this.props.searchPolls.map(poll =>{\r\n                                    return (\r\n                                        <div key={poll._id} className=\"pollDiv\">\r\n                                            <p className='mt-2 font-bold text-gray-700'>\r\n                                                {poll.title}\r\n                                            </p>\r\n                                            <Link to={`/polls/pollResult/${poll._id}`} className=\"resultLink\">\r\n                                                Result\r\n                                            </Link>\r\n                                        </div>\r\n                                    )\r\n                                }):(\r\n                                    <div className={`col-span-2 h-28 ${this.props.showResult}`}>\r\n                                        <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm;","import { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport { handleSearchResults } from '../../actions/polls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport SearchForm from \"./Search/SearchForm\";\r\nimport './Nav.css';\r\n\r\nclass Nav extends Component{\r\n    state = {\r\n        showResult: 'hidden',\r\n        smNav: 'hidden',\r\n        barsRotation: 0,\r\n    }\r\n    resultDiv(e){\r\n        const input = e.target.value;\r\n        let showPage;\r\n        if(input){\r\n           showPage = '';\r\n        }else{\r\n            showPage = 'hidden';\r\n        }\r\n        this.props.dispatch(handleSearchResults(input));\r\n        this.setState({\r\n            showResult: showPage\r\n        }) \r\n    }\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n                <nav className=\"grid w-full h-16 grid-flow-col bg-blue-900\">\r\n                    <ul className=\"grid w-full h-8 grid-flow-col gap-1 mt-6 ml-6 auto-cols-min\">\r\n                        <FontAwesomeIcon \r\n                            icon={faBars} \r\n                            color=\"gray\" \r\n                            size='lg' \r\n                            rotation={this.state.barsRotation}\r\n                            className='transition duration-500 cursor-pointer sm:hidden'\r\n                            onClick={()=> this.setState({smNav: this.state.smNav === 'hidden' ? '':'hidden', barsRotation: this.state.barsRotation === 0 ? 90 : 0 })}\r\n                        />\r\n                        <NavLink to='/' className={`navItem w-20 ${this.props.currentUrl === '/' ? `text-yellow-200`:`text-gray-300`}`}>\r\n                            Home\r\n                        </NavLink>\r\n                        <NavLink to='/add' className={`navItem w-36 ${this.props.currentUrl === '/add' ? `text-yellow-200`:`text-gray-300`}`}>\r\n                            New Poll\r\n                        </NavLink>\r\n                        <NavLink to='/leaderboard' className={`navItem w-36 ${this.props.currentUrl === '/leaderboard' ? `text-yellow-200`:`text-gray-300`}`}>\r\n                            Leader Board\r\n                        </NavLink>\r\n                    </ul>\r\n                    <div className='grid w-full h-8 grid-flow-col '>\r\n                    {this.props.authUser.userId ? (\r\n                        <div className='flex justify-end'>\r\n                            <NavLink to={`/profile/${this.props.authUser.userId}`} className=\"flex flex-row gap-2 mt-6\">\r\n                                <p className='transition hover:text-yellow-100'>{this.props.authUser.name}</p>\r\n                                <img className=\"w-8 h-8 rounded-full\" alt={this.props.authUser.name} src={process.env.REACT_APP_API_URL+`${this.props.authUser.imageUrl}`} />\r\n                            </NavLink>\r\n                            <div id=\"logout\" className=\"mt-6\">\r\n                                <p className=\"w-20 logLink\" onClick={this.props.logoutHandler}>\r\n                                    <NavLink to='/'>\r\n                                        Logout\r\n                                    </NavLink>\r\n                                </p>\r\n                            </div> \r\n                        </div>) : (\r\n                            <div className=\"flex justify-center gap-4 mt-6 sm:justify-end\">\r\n                                <NavLink to='/login' className=\"h-8 logLink\">\r\n                                    Login\r\n                                </NavLink>\r\n                                <NavLink to='/signup' className=\"h-8 logLink\">\r\n                                    Signup\r\n                                </NavLink>\r\n                            </div>\r\n                        )}\r\n                        <SearchForm \r\n                            showResult={this.state.showResult} \r\n                            searchPolls={this.props.searchPolls} \r\n                            searchLoading={this.props.searchLoading}\r\n                            resultDiv={this.resultDiv.bind(this)}\r\n                        />\r\n                    </div>\r\n                </nav>\r\n                <div className={`flex flex-col mt-2 sm:hidden ${this.state.smNav}`}>\r\n                    <NavLink to='/' className={`smNav w-20 ${this.props.currentUrl === '/' ? `border-l-4`:``}`}>\r\n                        Home\r\n                    </NavLink>\r\n                    <NavLink to='/add' className={`smNav w-36 ${this.props.currentUrl === '/add' ? `border-l-4`:``}`}>\r\n                        New Question\r\n                    </NavLink>\r\n                    <NavLink to='/leaderboard' className={`smNav w-36 ${this.props.currentUrl === '/leaderboard' ? `border-l-4`:``}`}>\r\n                        Leader Board\r\n                    </NavLink>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authUser, polls}, props){\r\n    const currentUrl = props.location.pathname;\r\n    return {\r\n      authUser: authUser,\r\n      searchPolls: polls.searchLoading ? polls.searchPolls.searchPolls : [],\r\n      searchLoading: polls.searchLoading,\r\n      currentUrl: currentUrl\r\n    }\r\n  }\r\n\r\nexport default withRouter(connect(mapStateToProps)(Nav));\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Footer extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className='flex items-stretch w-full h-full'>\r\n                <div className='self-end w-full h-20 align-bottom bg-blue-900'>\r\n                    <h1 className='text-center text-white'>Voting App</h1>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Footer);","import { Component } from \"react\";\nimport { setAuthUser } from \"../actions/authUser\"\nimport { connect } from \"react-redux\";\nimport SignUp from \"./SignUp/SignUp\";\nimport Login from \"./Login/Login\";\nimport Home from \"./Home/Home\";\nimport VotePoll from \"./VotePoll/VotePoll\";\nimport Results from \"./Results/Results\";\nimport NewPoll from \"./NewPoll/NewPoll\";\nimport LeaderBoard from \"./LeaderBoard/LeaderBoard\";\nimport Profile from \"./Profile/Profile\";\nimport { withRouter, Route, Switch } from 'react-router-dom';\nimport Nav from \"./Nav/Nav\";\nimport Footer from \"./Footer\";\nimport openSocket from 'socket.io-client';\nimport { createPoll } from '../actions/poll';\nimport Error404 from \"./Error404\";\n\nclass App extends Component {\n  componentDidMount(){\n    this.setLoginSession();\n    \n    const socket = openSocket('http://localhost:8080');\n    socket.on('polls', data =>{\n        if (this.props.authUser.userId !== data.poll.author._id && data.action === 'createPoll'){\n            if(!this.props.location.search || this.props.location.search === '?nav=unAns' || this.props.location.search ==='?nav=unAns&page=1'){\n              this.props.dispatch(createPoll({poll:data.poll}, true, true));\n            }else if(+this.props.location.search.match(/(\\d)/g) > 1 && this.props.location.search.match(/(unAns)/g)){\n              this.props.dispatch(createPoll({poll:data.poll}, true, false))\n            }\n        } \n    })\n }\n  setLoginSession(){\n    /* create token session */\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      this.props.dispatch(setAuthUser({}));\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const remainingMilliseconds = new Date(expiryDate).getTime() - new Date().getTime();\n    const userId = localStorage.getItem('userId');\n    const name = localStorage.getItem('name');\n    const email = localStorage.getItem('email')\n    const imageUrl = localStorage.getItem('imageUrl');\n    this.props.dispatch(\n                setAuthUser({\n                    userId:userId, \n                    token:token, \n                    name:name, \n                    email:email, \n                    imageUrl:imageUrl\n                  }))\n    this.setAutoLogout(remainingMilliseconds);\n  }\n  setAutoLogout(milliseconds){\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n  logoutHandler = ()=>{\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('name');\n    localStorage.removeItem('email');\n    localStorage.removeItem('imageUrl');\n    this.props.dispatch(setAuthUser({}));\n  };\n\n  render(){\n    return (\n      <div className='h-screen'>\n        <Nav logoutHandler={this.logoutHandler.bind(this)} />\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route exact path='/signup' component={SignUp}/>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/profile/:user_id\" render={(props)=>(<Profile {...props} logoutHandler={this.logoutHandler.bind(this)}/>)}/>\n          <Route exact path=\"/polls/poll/:poll_id\" component={VotePoll} />\n          <Route exact path=\"/polls/pollResult/:poll_id\" component={Results} />\n          <Route exact path=\"/add\" component={NewPoll} />\n          <Route exact path=\"/leaderboard\" component={LeaderBoard} />\n          <Route component={Error404} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({authUser, polls}){\n  return {\n    authUser: authUser,\n    polls: polls\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","import { RECEIVE_POLLS, RECEIVE_AUTH_POLLS, SEARCH_POLLS } from \"../actions/polls\";\r\nimport { CREATE_POLL } from '../actions/poll';\r\n\r\nconst initialState = {\r\n    polls:[],\r\n    pagination:{\r\n        paginationArr: [],\r\n        pageRange: 0,\r\n        loading: false,\r\n        totalItems: 0,\r\n        perPage: 2\r\n    },\r\n}\r\n\r\nexport function polls(state = initialState, action){\r\n    switch (action.type) {\r\n        case RECEIVE_POLLS:\r\n            return {\r\n                polls: action.polls,\r\n                pagination:{\r\n                    polls: action.polls,\r\n                    paginationArr: action.paginationArr,\r\n                    pageRange: action.pageRange,\r\n                    loading: action.loading,\r\n                    totalItems: action.totalItems,\r\n                    perPage: action.perPage\r\n                },\r\n                loading: action.loading\r\n            }\r\n        case CREATE_POLL:\r\n            let paginationArr = [];\r\n            if(action.poll){\r\n                if(action.firstPage){\r\n                    state.polls.unshift(action.poll)\r\n                }\r\n                if(state.pagination.totalItems>=state.pagination.perPage){\r\n                    if(action.firstPage){\r\n                        state.polls.pop();\r\n                    }\r\n                    for(let i=1; i<=(Math.ceil((state.pagination.totalItems+1)/state.pagination.perPage));i++){\r\n                        paginationArr.push(i);\r\n                    }\r\n                }\r\n            }\r\n            const pageRange = +paginationArr.length;\r\n            return {\r\n                ...state,\r\n                polls: [...state.polls],\r\n                errors: action.errors,\r\n                success: action.success,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    paginationArr: paginationArr,\r\n                    pageRange: pageRange,\r\n                    totalItems: state.pagination.totalItems+1\r\n                }\r\n            }\r\n        case RECEIVE_AUTH_POLLS:\r\n            return {\r\n                polls: action.polls,\r\n                pagination:{\r\n                    paginationArr: action.paginationArr,\r\n                    pageRange: action.pageRange,\r\n                    loading: action.loading,\r\n                    totalItems: action.totalItems,\r\n                    perPage: action.perPage\r\n                },\r\n                loading: action.loading\r\n            }\r\n        case SEARCH_POLLS:\r\n            return {\r\n                ...state,\r\n                searchPolls: action.polls,\r\n                searchLoading: action.searchLoading\r\n                \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_USER, GET_LEADER_BOARD } from \"../actions/user\";\r\nimport { DELETE_POLL } from \"../actions/poll\";\r\n\r\nconst initialState = {\r\n    createdPolls: [],\r\n    user: {},\r\n    votedPolls: [],\r\n}\r\nexport function user(state = initialState, action){\r\n    switch (action.type) {\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                userLoading: action.userLoading,\r\n                ...action.results\r\n            }\r\n        case GET_LEADER_BOARD:\r\n            return {\r\n                ...state,\r\n                leaderLoading: action.leaderLoading,\r\n                ...action.results\r\n            }\r\n        case DELETE_POLL:\r\n        return {\r\n            ...state,\r\n            createdPolls: [...state.createdPolls.filter(poll => poll._id !== action.poll_Id)],\r\n            votedPolls: [...state.votedPolls.filter(poll => poll._id !== action.poll_Id)],\r\n            user: {...state.user,\r\n                createdPolls: state.createdPolls.filter(poll => poll._id !== action.poll_Id),\r\n                votedPolls: state.votedPolls.filter(poll => poll._id !== action.poll_Id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { polls } from \"./polls\";\r\nimport { user } from \"./user\";\r\nimport { authUser } from \"./authUser\";\r\nimport { poll } from \"./poll\";\r\n\r\nexport default combineReducers({\r\n    poll,\r\n    polls,\r\n    user,\r\n    authUser\r\n})","import { GET_POLL ,SAVE_ANSWER, UPDATE_VOTE, DELETE_VOTE } from \"../actions/poll\";\r\n\r\nexport function poll(state = {}, action){\r\n    switch (action.type) {\r\n        case GET_POLL:\r\n            return {\r\n                ...state,\r\n                ...action.poll,\r\n                loading: action.loading\r\n            }\r\n        case SAVE_ANSWER:\r\n            return {\r\n                ...state,\r\n                ...action.poll,\r\n            }\r\n        case UPDATE_VOTE:\r\n            return {\r\n                ...state,\r\n                ...action.poll\r\n            }\r\n        case DELETE_VOTE:\r\n            return {\r\n                ...state,\r\n                ...action.poll\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_AUTH_USER, CREATE_USER, UPDATE_USER, DELETE_USER, CHANGE_PASSWORD } from \"../actions/authUser\";\r\n\r\nexport function authUser(authUser={}, action){\r\n    switch (action.type) {\r\n        case SET_AUTH_USER:\r\n            return {\r\n                userId: action.userId,\r\n                token: action.token,\r\n                name: action.name,\r\n                email: action.email,\r\n                imageUrl: action.imageUrl,\r\n                errors: action.errors\r\n            }\r\n        case CREATE_USER:\r\n            return {\r\n                userId: action.userId,\r\n                errors: action.errors\r\n            }\r\n        case UPDATE_USER:\r\n            return {\r\n                ...authUser,\r\n                message: action.message,\r\n                errors: action.errors\r\n            }\r\n        case CHANGE_PASSWORD:\r\n            return {\r\n                ...authUser,\r\n                message: action.message,\r\n                errors: action.errors\r\n            }\r\n        case DELETE_USER:\r\n            return {\r\n                ...authUser,\r\n                message: action.message,\r\n                errors: action.errors\r\n            }          \r\n        default:\r\n            return authUser;\r\n    }\r\n}","import {logger} from \"./logger\";\r\nimport thunk from 'redux-thunk';\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger,\r\n    \r\n)","export const logger = (store)=>(next)=>(action)=>{\r\n    \r\n    console.group(action.type)\r\n        console.log('The action: ', action);\r\n        const returnValue = next(action);\r\n        console.log('The new State: ', store.getState())\r\n    console.groupEnd()\r\n\r\nreturn returnValue;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport root from './reducers/root';\nimport middleware from './middleware/middleware';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nconst store = createStore(root, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}